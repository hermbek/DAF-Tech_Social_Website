{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BlogDetailComponent = class BlogDetailComponent {\n  constructor(homeService, route, commonService, router) {\n    this.homeService = homeService;\n    this.route = route;\n    this.commonService = commonService;\n    this.router = router;\n    this.recentPostTitles = []; // Array to store recent post titles\n  }\n\n  ngOnInit() {\n    this.blogId = this.route.snapshot.paramMap.get('id');\n    this.getSingleBlog(this.blogId);\n    this.getBlogs();\n    this.loadRecentPostTitles(); // Load recent post titles here\n  }\n\n  getSingleBlog(id) {\n    this.homeService.getSingleBlog(id).subscribe({\n      next: res => {\n        this.blog = res.data;\n        console.log(\"Blog Data\", this.blog);\n      },\n      error: err => {\n        console.error(\"Error fetching blog data\", err);\n      }\n    });\n  }\n  getBlogs() {\n    this.homeService.getBlogs().subscribe({\n      next: res => {\n        this.blogs = res.data;\n        console.log(\"blogsssssssss\", this.blogs);\n      },\n      error: err => {\n        console.error(\"Error fetching blog data\", err);\n      }\n    });\n  }\n  goToDetail(item) {\n    this.router.navigate(['blog', item.id]);\n    this.blog = item;\n  }\n  getImagePath(image) {\n    return this.commonService.createImagePath(image.data.attributes.url);\n  }\n  loadRecentPostTitles() {\n    this.recentPostTitles = ['NEW', 'SOMETHING', 'ICT SOLUTION'];\n  }\n};\nBlogDetailComponent = __decorate([Component({\n  selector: 'app-blog-detail',\n  templateUrl: './blog-detail.component.html',\n  styleUrls: ['./blog-detail.component.css']\n})], BlogDetailComponent);","map":{"version":3,"names":["Component","BlogDetailComponent","constructor","homeService","route","commonService","router","recentPostTitles","ngOnInit","blogId","snapshot","paramMap","get","getSingleBlog","getBlogs","loadRecentPostTitles","id","subscribe","next","res","blog","data","console","log","error","err","blogs","goToDetail","item","navigate","getImagePath","image","createImagePath","attributes","url","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\hp\\Desktop\\Daf-Website\\DAF-Tech_Social_Website\\DAF-CLIENT\\src\\app\\pages\\home\\blog-carousel\\blog-detail\\blog-detail.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService } from 'src/app/services/common.service';\nimport { HomeService } from 'src/app/services/home.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-blog-detail',\n  templateUrl: './blog-detail.component.html',\n  styleUrls: ['./blog-detail.component.css']\n})\nexport class BlogDetailComponent implements OnInit {\n  blog: any;\n  blogs : any ;\n  blogId!: string;\n  recentPostTitles: string[] = []; // Array to store recent post titles\n\n  constructor(\n    private homeService: HomeService,\n    private route: ActivatedRoute,\n    private commonService: CommonService,\n    private router : Router\n  ) {}\n\n  ngOnInit(): void {\n    this.blogId = this.route.snapshot.paramMap.get('id')!;\n    this.getSingleBlog(this.blogId);\n    this.getBlogs()\n    this.loadRecentPostTitles(); // Load recent post titles here\n  }\n\n  getSingleBlog(id: string) {\n    this.homeService.getSingleBlog(id).subscribe({\n      next: (res) => {\n        this.blog = res.data;\n        console.log(\"Blog Data\", this.blog);\n      },\n      error: (err) => {\n        console.error(\"Error fetching blog data\", err);\n      }\n    });\n  }\n\n  getBlogs (){\n\n    this.homeService.getBlogs().subscribe(\n      {\n        next: (res) => {\n          this.blogs = res.data;\n          console.log(\"blogsssssssss\",this.blogs)\n          \n        },\n        error: (err) => {\n          console.error(\"Error fetching blog data\", err);\n        }\n        \n      }\n    )\n  }\n  goToDetail(item:any){\n\n    this.router.navigate(['blog',item.id])\n    this.blog= item\n\n  }\n  \n  getImagePath(image: any) {\n    return this.commonService.createImagePath(image.data.attributes.url);\n  }\n\n\n\n  loadRecentPostTitles() {\n    this.recentPostTitles = ['NEW', 'SOMETHING', 'ICT SOLUTION']; \n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAM9BC,YACUC,WAAwB,EACxBC,KAAqB,EACrBC,aAA4B,EAC5BC,MAAe;IAHf,KAAAH,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,gBAAgB,GAAa,EAAE,CAAC,CAAC;EAO9B;;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;IACrD,IAAI,CAACC,aAAa,CAAC,IAAI,CAACJ,MAAM,CAAC;IAC/B,IAAI,CAACK,QAAQ,EAAE;IACf,IAAI,CAACC,oBAAoB,EAAE,CAAC,CAAC;EAC/B;;EAEAF,aAAaA,CAACG,EAAU;IACtB,IAAI,CAACb,WAAW,CAACU,aAAa,CAACG,EAAE,CAAC,CAACC,SAAS,CAAC;MAC3CC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACC,IAAI,GAAGD,GAAG,CAACE,IAAI;QACpBC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACH,IAAI,CAAC;MACrC,CAAC;MACDI,KAAK,EAAGC,GAAG,IAAI;QACbH,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEC,GAAG,CAAC;MAChD;KACD,CAAC;EACJ;EAEAX,QAAQA,CAAA;IAEN,IAAI,CAACX,WAAW,CAACW,QAAQ,EAAE,CAACG,SAAS,CACnC;MACEC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACO,KAAK,GAAGP,GAAG,CAACE,IAAI;QACrBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC,IAAI,CAACG,KAAK,CAAC;MAEzC,CAAC;MACDF,KAAK,EAAGC,GAAG,IAAI;QACbH,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEC,GAAG,CAAC;MAChD;KAED,CACF;EACH;EACAE,UAAUA,CAACC,IAAQ;IAEjB,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,MAAM,EAACD,IAAI,CAACZ,EAAE,CAAC,CAAC;IACtC,IAAI,CAACI,IAAI,GAAEQ,IAAI;EAEjB;EAEAE,YAAYA,CAACC,KAAU;IACrB,OAAO,IAAI,CAAC1B,aAAa,CAAC2B,eAAe,CAACD,KAAK,CAACV,IAAI,CAACY,UAAU,CAACC,GAAG,CAAC;EACtE;EAIAnB,oBAAoBA,CAAA;IAClB,IAAI,CAACR,gBAAgB,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,cAAc,CAAC;EAC9D;CACD;AAhEYN,mBAAmB,GAAAkC,UAAA,EAL/BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWrC,mBAAmB,CAgE/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}