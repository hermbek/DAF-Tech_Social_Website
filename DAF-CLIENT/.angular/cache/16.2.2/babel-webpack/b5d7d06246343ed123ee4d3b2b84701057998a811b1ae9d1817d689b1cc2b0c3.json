{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/home.service\";\nimport * as i2 from \"src/app/services/common.service\";\nimport * as i3 from \"@angular/common\";\nfunction TotalCountsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"div\", 7);\n    i0.ɵɵelement(3, \"i\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 9)(5, \"div\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 11);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵattribute(\"data-to\", item_r1.attributes.Number);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.attributes.Number, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.attributes.Namess);\n  }\n}\nexport class TotalCountsComponent {\n  constructor(homeService, commonService) {\n    this.homeService = homeService;\n    this.commonService = commonService;\n  }\n  ngOnInit() {\n    this.homeService.getTotalCounts().subscribe({\n      next: res => {\n        this.totalcounts = res.data;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n}\n_class = TotalCountsComponent;\n_class.ɵfac = function TotalCountsComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HomeService), i0.ɵɵdirectiveInject(i2.CommonService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-total-counts\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"fun-factor-area\", \"overflow-hidden\"], [1, \"container\"], [1, \"fun-fact-items\", \"default-padding\"], [1, \"row\"], [\"class\", \"col-lg-3 col-md-6 item\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-lg-3\", \"col-md-6\", \"item\"], [1, \"fun-fact\"], [1, \"icon\"], [1, \"f\"], [1, \"info\"], [\"data-speed\", \"5000\", \"id\", \"countElement\", 1, \"timer\"], [\"id\", \"nameElement\", 1, \"medium\"]],\n  template: function TotalCountsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵtemplate(4, TotalCountsComponent_div_4_Template, 9, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.totalcounts);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵattribute","item_r1","attributes","Number","ɵɵtextInterpolate1","ɵɵtextInterpolate","Namess","TotalCountsComponent","constructor","homeService","commonService","ngOnInit","getTotalCounts","subscribe","next","res","totalcounts","data","error","err","console","log","ɵɵdirectiveInject","i1","HomeService","i2","CommonService","selectors","decls","vars","consts","template","TotalCountsComponent_Template","rf","ctx","ɵɵtemplate","TotalCountsComponent_div_4_Template","ɵɵproperty"],"sources":["C:\\Users\\hp\\Desktop\\Daf-Website\\DAF-Tech_Social_Website\\DAF-CLIENT\\src\\app\\total-counts\\total-counts.component.ts","C:\\Users\\hp\\Desktop\\Daf-Website\\DAF-Tech_Social_Website\\DAF-CLIENT\\src\\app\\total-counts\\total-counts.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonService } from 'src/app/services/common.service';\nimport { HomeService } from 'src/app/services/home.service';\n\n@Component({\n  selector: 'app-total-counts',\n  templateUrl: './total-counts.component.html',\n  styleUrls: ['./total-counts.component.css']\n})\nexport class TotalCountsComponent implements OnInit {\n\n  totalcounts: any\n  constructor(private homeService: HomeService,private commonService:CommonService) { }\n  ngOnInit(): void {\n\n    this.homeService.getTotalCounts().subscribe({\n      next: (res) => {\n\n        this.totalcounts = res.data\n       \n\n      }, error: (err) => {\n        console.log(err)\n      }\n    })\n\n  }\n}\n","<div class=\"fun-factor-area overflow-hidden\">\n  <div class=\"container\">\n    <div class=\"fun-fact-items default-padding\">\n      <div class=\"row\">\n\n\n        <div *ngFor=\"let item of totalcounts\" class=\"col-lg-3 col-md-6 item\">\n          <div class=\"fun-fact\">\n            <div class=\"icon\">\n              <i class=\"f\"></i>\n            </div>\n            <div class=\"info\">\n              <div class=\"timer\" [attr.data-to]=\"item.attributes.Number\" data-speed=\"5000\" id=\"countElement\">\n                {{item.attributes.Number}}</div>\n              <span class=\"medium\" id=\"nameElement\">{{item.attributes.Namess}}</span>\n              <script>\n                function startCounting() {\n                  const countElement = document.getElementById('countElement');\n                  const nameElement = document.getElementById('nameElement');\n                  const initialCount = parseInt(countElement.getAttribute('data-to'));\n                  const speed = parseInt(countElement.getAttribute('data-speed'));\n                  let count = 0;\n\n                  countElement.textContent = initialCount;\n\n\n                  nameElement.textContent = item.attributes.Namess;\n\n\n                  function updateCount() {\n                    count++;\n                    countElement.textContent = count;\n\n\n                    if (count === initialCount) {\n                      clearInterval(interval);\n                    }\n                  }\n\n\n                  const interval = setInterval(updateCount, speed);\n                }\n\n                document.addEventListener('DOMContentLoaded', startCounting);\n              </script>\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n    </div>\n  </div>\n</div>"],"mappings":";;;;;;;ICMQA,EAAA,CAAAC,cAAA,aAAqE;IAG/DD,EAAA,CAAAE,SAAA,WAAiB;IACnBF,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,aAAkB;IAEdD,EAAA,CAAAI,MAAA,GAA0B;IAAAJ,EAAA,CAAAG,YAAA,EAAM;IAClCH,EAAA,CAAAC,cAAA,eAAsC;IAAAD,EAAA,CAAAI,MAAA,GAA0B;IAAAJ,EAAA,CAAAG,YAAA,EAAO;;;;IAFpDH,EAAA,CAAAK,SAAA,GAAuC;IAAvCL,EAAA,CAAAM,WAAA,YAAAC,OAAA,CAAAC,UAAA,CAAAC,MAAA,CAAuC;IACxDT,EAAA,CAAAK,SAAA,GAA0B;IAA1BL,EAAA,CAAAU,kBAAA,MAAAH,OAAA,CAAAC,UAAA,CAAAC,MAAA,KAA0B;IACUT,EAAA,CAAAK,SAAA,GAA0B;IAA1BL,EAAA,CAAAW,iBAAA,CAAAJ,OAAA,CAAAC,UAAA,CAAAI,MAAA,CAA0B;;;ADL9E,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,WAAwB,EAASC,aAA2B;IAA5D,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,aAAa,GAAbA,aAAa;EAAkB;EACpFC,QAAQA,CAAA;IAEN,IAAI,CAACF,WAAW,CAACG,cAAc,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAGC,GAAG,IAAI;QAEZ,IAAI,CAACC,WAAW,GAAGD,GAAG,CAACE,IAAI;MAG7B,CAAC;MAAEC,KAAK,EAAGC,GAAG,IAAI;QAChBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;KACD,CAAC;EAEJ;;SAjBWZ,oBAAoB;;mBAApBA,MAAoB,EAAAb,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA9B,EAAA,CAAA4B,iBAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;;QAApBnB,MAAoB;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTjCvC,EAAA,CAAAC,cAAA,aAA6C;MAMrCD,EAAA,CAAAyC,UAAA,IAAAC,mCAAA,iBAyCM;MAGR1C,EAAA,CAAAG,YAAA,EAAM;;;MA5CkBH,EAAA,CAAAK,SAAA,GAAc;MAAdL,EAAA,CAAA2C,UAAA,YAAAH,GAAA,CAAAlB,WAAA,CAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}